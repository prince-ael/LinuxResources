
--------------------------------------------Amending(Correcting) Git Commit-------------------------

Amending means correction of commit in git.

To Do This use 

git commit --amend

/*
  * It will let you edit last commit message
*/

Then force push the changes.Like below

git push --force example-branch

['git rm --cached AndroidV2 -r' Unstaging Project]
--------------------------------------------Git Reset-----------------------------------------------
reseting in git means removing a file or a bunch of file from staging area[lsit of tracked files]

Syntax : git reset filename.extension

--------------------------------------------Git Branching-------------------------------------------

$ git branch  //Show The Current Branch We r in
* master

$ git branch -a // List all the branches '*' denotes current branch

* master
  remotes/origin/HEAD -> origin/master
  remotes/origin/UMR_ios
  remotes/origin/V1-Old
  remotes/origin/dev_Ali
  remotes/origin/dev_Nahid
  remotes/origin/dev_branch
  remotes/origin/master
  
$ git checkout [dev_Nahid(branch name)] // switches from current branch to the branch mentioned after checkout.

M	AndroidV2/New Text Document.txt
Branch dev_Nahid set up to track remote branch dev_Nahid from origin.
Switched to a new branch 'dev_Nahid'
--------------------------------------------Git Merging Branches-----------------------------------------------
Let say there is two branch 'Branch-A' & 'Branch-B'.

The goal is to merge 'Branch-B' with 'Branch-A'. So that 'Branch-A' could have the update from 'Branch-B' and 'Branch-B' should remain as it was before.

First of all, switch to 'Branch-A' if 'Branch-A' is not current branch.[command : git checkout Branch-A]

Then apply the command [git merge 'Branch-B']
This command will cause merging 'Branch-B' with your current branch which is 'Branch-A'.
It is possible to mention any number of branch after 'git merge' like this[git merge<space>Branch-A<Space>'Branch-B'<Space>'Branch-C']. 
All the branches will be merged with currently checked out branch.

Merging Two branches may cause merge conflict, generally when two branch make change to same file or part.
Merge conflict will cause 'automatic merge failed'.

To resolve:- 

1.Open The Conflicted file/s.

The block marked by '<<<<<<<<<<<<<HEAD' is the code of the current branch
The block of code marked by '|||||||| merged common ancestor' is the part modified by both branches.

The block of codes by other branches is marked by '>>>>>>>>>>>>>>>>>>>master' here master is the branch name.

Now its up to user which one to keep, which one to delete, which one to combine.





